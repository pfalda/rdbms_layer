DbmsLayer {
    akka {
        version = "2.2.3"
        loglevel = "INFO"
        stdout-loglevel = "INFO"
        log-config-on-start = off
        loggers = ["com.typesafe.atmos.trace.Slf4jTraceContextLogger"]
        actor {

#           serialize-messages = on
#           serialize-creators = on
#           provider = "akka.remote.RemoteActorRefProvider"

            serializers {
                proto = "akka.remote.serialization.ProtobufSerializer"
            }

            serialization-bindings {
                "com.google.protobuf.Message" = proto
            }

            dbms-queries-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 2
                    parallelism-factor = 2.0
                    parallelism-max = 2
                }
            }

            async-get-broker-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 2
                    parallelism-factor = 2.0
                    parallelism-max = 2
                }
            }

            async-release-broker-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 2
                    parallelism-factor = 2.0
                    parallelism-max = 2
                }
            }

            async-whatever-broker-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 2
                    parallelism-factor = 2.0
                    parallelism-max = 2
                }
            }


            connections-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 1

                fork-join-executor {
                    parallelism-min = 2
                    parallelism-factor = 2.0
                    parallelism-max = 2
                }
            }

            deadletters-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 1000

                fork-join-executor {
                    parallelism-min = 1
                    parallelism-factor = 1.0
                    parallelism-max = 1
                }
            }

            close-connections-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 3
                    parallelism-factor = 3.0
                    parallelism-max = 3
                }
            }

            default-dispatcher {

                type = "Dispatcher"
                executor = "fork-join-executor"

                throughput = 100

                fork-join-executor {
                    parallelism-min = 4
                    parallelism-factor = 2.0
                    parallelism-max = 32
                }

            }

        }
    }

}

YourAppConf {
    akka {
        version = "2.2.3"
        loglevel = "INFO"
        stdout-loglevel = "INFO"
        log-config-on-start = off

        mysqldb {
            host = "taurus"
            port = 3306
            dbname = "TemplateDB"
            username = "root"
            pwd = "root"
        }
    }
}

atmos {
    mode = local
    trace {
        enabled = false 
        node = DisBrainTemplate
        traceable {
            "*" = on
        }
        sampling {
            "*" = 1

        }
#        events {
#         futures = "on"
#        }
        loggers = ["com.typesafe.atmos.trace.store.MemoryTraceEventListener", "com.typesafe.atmos.analytics.analyze.LocalAnalyzerTraceEventListener"]
    }
}
